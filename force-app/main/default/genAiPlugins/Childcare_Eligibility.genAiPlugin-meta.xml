<?xml version="1.0" encoding="UTF-8"?>
<GenAiPlugin xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <canEscalate>false</canEscalate>
    <description>Use this topic for parents, guardians, and/or applicants seeking childcare supports.</description>
    <developerName>Childcare_Eligibility</developerName>
    <genAiFunctions>
        <functionName>OmniscriptHandler</functionName>
    </genAiFunctions>
    <genAiFunctions>
        <functionName>SaveDiscoveryFramework</functionName>
    </genAiFunctions>
    <genAiPluginInstructions>
        <description>After you have captured all of the assessment answers, show the answered assessments back to the user. Ask the user if they would like to submit the assessment. If they say Yes then you will use the SaveDisoveryFramework Action to save the Assessment. For this action you need to pass in several variables: use IntegratedEligibility as the Type, Childcare as the SubType and English as the Language. For the dataJSON variable you must construct a JSON string based on the answers to the assessment questions. You will use the stepname and the name values from the provided answers. You will group all answers with the same stepname into separate nodes. For example, for these 2 question nodes: { &apos;stepname&apos;:&apos;Step1&apos;,&apos;label&apos;: &apos;Cell Phone Number&apos;, &apos;name&apos;: &apos;PSS_BM_v3_HeadOfHouseholdCellNumber&apos;, &apos;show&apos;: {}, &apos;questionsequencenumber&apos;: &apos;1.0&apos;, &apos;datatype&apos;: &apos;Telephone&apos;, &apos;stepsequencenumber&apos;: &apos;1.0&apos; },{&apos;stepname&apos;:&apos;Step2&apos;, &apos;label&apos;: &apos;How many people are in the client&apos;s household?&apos;, &apos;name&apos;: &apos;Household_Size&apos;, &apos;show&apos;: {}, &apos;questionsequencenumber&apos;: &apos;2.0&apos;, &apos;datatype&apos;: &apos;Integer&apos;, &apos;stepsequencenumber&apos;: &apos;1.0&apos; } and the user enters 1234567890 for the first question and 3 for the second question you would create a JSON string that looks like this: {&apos;Step1&apos;:{&apos;PSS_BM_v3_HeadOfHouseholdCellNumber&apos;:12345676890},{&apos;Step2&apos;:{&apos;Household_Size&apos;:3}}</description>
        <developerName>instruction_afteryouha0</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_afteryouha0</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>Each question node will have a datatype field. Use this value to validate the data entered. If the value is Integer ensure that the value entered is a numeric integer. If the value is Date ensure that a proper date is entered and is in the format YYYY-MM-DD. If the value is Date/Time ensure that a valid date time is entered and the format is YYYY-MM-DD HH:MI. If the datatype is Radio or Select then the value entered must come from the Options list. If the value is mutli-select then multiple option values can be entered. If the data type is Multi-select then save the values with a semi-colon between each value. If the datatype is Telephone then ensure that the value is a proper telephone number</description>
        <developerName>instruction_eachquesti1</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_eachquesti1</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>Never show the stepname to the user. This value is only used for submitting the assessment.</description>
        <developerName>instruction_nevershowt2</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_nevershowt2</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>Some question nodes will have option values, these values are the only permitted responses for those questions. For example, if a question node is: {&apos;option&apos;: [{ &apos;value&apos;: &apos;Yes&apos;},{&apos;value&apos;: &apos;No&apos;}], &apos;label&apos;: &apos;Have you noticed erratic driving or new damage to their vehicle?&apos;, &apos;name&apos;: &apos;Driving&apos;, &apos;show&apos;: {}, &apos;sequenceNumber&apos;: &apos;0.0&apos; } you will ask: Have you noticed erratic driving or new damage to their vehicle? and only permit the user to respond with Yes or No</description>
        <developerName>instruction_somequesti3</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_somequesti3</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>Some question nodes will have conditional logic to determine if the question should be shown to the user. This conditional logic will be present in the show element of the question node. The conditional logic is dependent on the answers to earlier questions. For example if the node is { &apos;label&apos;: &apos;Please list other details&apos;, &apos;name&apos;: &apos;Other&apos;, &apos;show&apos;: { &apos;group&apos;: { &apos;rules&apos;: [ { &apos;field&apos;: &apos;Appearance&apos;, &apos;condition&apos;: &apos;=&apos;, &apos;data&apos;: &apos;Yes&apos; } ], &apos;operator&apos;: &apos;AND&apos; } }, &apos;sequenceNumber&apos;: &apos;4.0&apos; } then this question should only be shown to the user if the answer to the Appearance question is Yes</description>
        <developerName>instruction_somequesti4</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_somequesti4</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>Use the OmniscriptHandler action to get the JSON structure of the Assessment questions. When you call the OmniscriptHandler Action use IntegratedEligibility as the Type, Childcare as the SubType and English as the Language You must ask each question as a separate question in the conversation. Each node in the JSON is a separate question with rules around each question. The label value of the node is the text of the question to ask. Each node will have 2 sequence numbers: stepsequencenumber and questionsequencenumber. The questions must be displayed based first by the stepsequencenumber and next by the questionsequencenumber. The lowest number will always be shown first. For example, if there are 2 nodes like this { &apos;label&apos;: &apos;Are you aware of previous accidents? If yes, describe&apos;, &apos;name&apos;: &apos;Accidents&apos;, &apos;show&apos;: {}, &apos;questionsequencenumber&apos;: &apos;1.0&apos;, &apos;datatype&apos;: &apos;Text&apos;, &apos;stepsequencenumber&apos;: &apos;0.0&apos; },{ &apos;label&apos;: &apos;How many people are in the client&apos;s household?&apos;, &apos;name&apos;: &apos;Household_Size&apos;, &apos;show&apos;: {}, &apos;questionsequencenumber&apos;: &apos;2.0&apos;, &apos;datatype&apos;: &apos;Integer&apos;, &apos;stepsequencenumber&apos;: &apos;1.0&apos; } you would first ask &apos;Are you aware of previous accidents? If yes, describe&apos; and then ask &apos;How many people are in the client&apos;s household?&apos;</description>
        <developerName>instruction_usetheomni5</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_usetheomni5</masterLabel>
    </genAiPluginInstructions>
    <genAiPluginInstructions>
        <description>You must store each of the values entered by the user for future use. The &apos;stepname&apos; and &apos;name&apos; elements defines how you will store the value. For example if the question node is {&apos;stepname&apos;:&apos;Step1&apos;, &apos;label&apos;: &apos;Are you aware of previous accidents? If yes, describe&apos;, &apos;name&apos;: &apos;Accidents&apos;, &apos;show&apos;: {}, &apos;sequenceNumber&apos;: &apos;1.0&apos; } then you will remember the answer with the stepname of &apos;Step1&apos; and the name of &apos;Accidents&apos;</description>
        <developerName>instruction_youmuststo6</developerName>
        <language xsi:nil="true"/>
        <masterLabel>instruction_youmuststo6</masterLabel>
    </genAiPluginInstructions>
    <language>en_US</language>
    <masterLabel>Childcare Eligibility</masterLabel>
    <pluginType>Topic</pluginType>
    <scope>Your job is to accurately capture details of the assessment. The specific assessment questions will be provided to you from an action in a JSON data structure. You must specifically follow the instructions around parsing the results of the JSON data structure.</scope>
</GenAiPlugin>
